Description: |
  Sample CI/CD pipeline using AWS stack

Parameters:
  Name:
    Type: String
    Default: demo
    AllowedPattern: "[-a-z0-9]+"
    ConstraintDescription: "lower case letters, numbers, and dashes only"

Resources:
  CodeRepo:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryName: !Sub "${Name}-repo"
      RepositoryDescription: Sample respository

  ArtifactBucket:
    Type: AWS::S3::Bucket

  CodeBuildServiceRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "codebuild.us-east-1.amazonaws.com"
                - "codebuild.us-west-2.amazonaws.com"
                - "codebuild.eu-west-1.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"

  CodeBuildServiceRolePolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "CodeBuildPolicy"
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: CloudWatchLogsPolicy
          Effect: Allow
          Action:
          - logs:CreateLogGroup
          - logs:CreateLogStream
          - logs:PutLogEvents
          Resource:
          - "*"
        - Sid: CodeCommitPolicy
          Effect: Allow
          Action:
          - codecommit:GitPull
          Resource:
          - "*"
        - Sid: S3GetObjectPolicy
          Effect: Allow
          Action:
          - s3:GetObject
          - s3:GetObjectVersion
          Resource:
          - "*"
        - Sid: S3PutObjectPolicy
          Effect: Allow
          Action:
          - s3:PutObject
          Resource:
          - "*"
      Roles:
        - !Ref CodeBuildServiceRole

  BuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${Name}-build"
      Description: A description about my project
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: linuxContainer
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/java:openjdk-8
      Source:
        Type: CODEPIPELINE
      TimeoutInMinutes: 10

  CodePipelineServiceRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "codepipeline.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"

  CodePipelineServiceRolePolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "CodePipelinePolicy"
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
            - s3:GetObject
            - s3:GetObjectVersion
            - s3:GetBucketVersioning
            Resource: "*"
            Effect: Allow
          - Action:
            - s3:PutObject
            Resource:
            - arn:aws:s3:::codepipeline*
            - arn:aws:s3:::elasticbeanstalk*
            Effect: Allow
          - Action:
            - codecommit:CancelUploadArchive
            - codecommit:GetBranch
            - codecommit:GetCommit
            - codecommit:GetUploadArchiveStatus
            - codecommit:UploadArchive
            Resource: "*"
            Effect: Allow
          - Action:
            - codedeploy:CreateDeployment
            - codedeploy:GetApplicationRevision
            - codedeploy:GetDeployment
            - codedeploy:GetDeploymentConfig
            - codedeploy:RegisterApplicationRevision
            Resource: "*"
            Effect: Allow
          - Action:
            - elasticbeanstalk:*
            - ec2:*
            - elasticloadbalancing:*
            - autoscaling:*
            - cloudwatch:*
            - s3:*
            - sns:*
            - cloudformation:*
            - rds:*
            - sqs:*
            - ecs:*
            - iam:PassRole
            Resource: "*"
            Effect: Allow
          - Action:
            - lambda:InvokeFunction
            - lambda:ListFunctions
            Resource: "*"
            Effect: Allow
          - Action:
            - opsworks:CreateDeployment
            - opsworks:DescribeApps
            - opsworks:DescribeCommands
            - opsworks:DescribeDeployments
            - opsworks:DescribeInstances
            - opsworks:DescribeStacks
            - opsworks:UpdateApp
            - opsworks:UpdateStack
            Resource: "*"
            Effect: Allow
      Roles:
        - !Ref CodePipelineServiceRole

  Pipeline:
    Type: "AWS::CodePipeline::Pipeline"
    Properties:
      Name: !Sub "${Name}-pipeline"
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeCommit
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                RepositoryName: !Ref CodeRepo
                BranchName: master
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: BuildAction
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: BuildOutput
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref BuildProject
              RunOrder: 1
        - Name: Stage
          Actions:
            - Name: StageAction
              InputArtifacts:
                - Name: BuildOutput
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: ElasticBeanstalk
              Configuration:
                ApplicationName: !Ref Application
                EnvironmentName: !Ref StageDeplotmentEnvironment
              RunOrder: 1
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket

  Application:
    Type: "AWS::ElasticBeanstalk::Application"
    Properties:
      ApplicationName: !Sub "${Name}-app"
      Description: "Sample Application"

  StageDeplotmentEnvironment:
    Type: "AWS::ElasticBeanstalk::Environment"
    Properties:
      ApplicationName: !Ref Application
      Description: "Sample Application"
      EnvironmentName: !Sub "${Name}-stage"
      SolutionStackName: "64bit Amazon Linux 2016.09 v2.4.0 running Tomcat 8 Java 8"
